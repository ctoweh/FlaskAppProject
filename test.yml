---
- name: Deploy Flask App
  hosts: g1
  become: yes
  remote_user: root
  
  tasks:
    - name: Update package manager cache (CentOS)
      yum:
        name: '*'
        state: latest
      when: ansible_distribution == 'CentOS'
        
    - name: Update package manager cache (Amazon Linux)
      yum:
        name: '*'
        state: latest
      when: ansible_distribution == 'Amazon'

    - name: Update apt cache (Ubuntu)
      apt:
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Ensure Python and necessary packages are installed (CentOS)
      yum:
        name:
          - python3-pip
          - python3-devel
          - python3-virtualenv
          - python3-flask
          - git
        state: present
      when: ansible_distribution == 'CentOS'

    - name: Ensure Python and necessary packages are installed (Amazon Linux)
      yum:
        name:
          - python3-pip
          - python3-devel
          - python3-virtualenv
          - python3-flask
          - git
        state: present
      when: ansible_distribution == 'Amazon'

    - name: Ensure Python and necessary packages are installed (Ubuntu)
      apt:
        name:
          - python3-pip
          - python3-dev
          - build-essential
          - python3-venv
          - python3-flask
          - git
        state: present
      when: ansible_distribution == 'Ubuntu'
        
    - name: Create directory for virtual environment
      file:
        path: /opt/flask-app
        state: directory

    - name: Create virtual environment
      command: python3 -m venv /opt/flask-app/venv
      become: yes
      when: ansible_distribution != 'Amazon'

    - name: Activate virtual environment
      shell: source /opt/flask-app/venv/bin/activate
      become: yes
      args:
        executable: /bin/bash
      when: ansible_distribution != 'Amazon'

    - name: Copy Flask app file
      copy:
        src: app.py
        dest: /opt/flask-app/app.py

    - name: Install Flask dependencies
      pip:
        name: flask
        executable: /opt/flask-app/venv/bin/pip
        state: present

    - name: Open port 5000 on the firewall (Ubuntu)
      ufw:
        rule: allow
        port: 5000
        proto: tcp
      become: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Run Flask app
      command: >
        /opt/flask-app/venv/bin/python /opt/flask-app/app.py &
      async: 0
      poll: 0
