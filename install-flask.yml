---
- name: Configure servers 
  hosts: all
  become: true
  vars:
    app_directory: "/home/{{ ansible_user }}/flask-app"
    git_repo_url: "https://github.com/ctoweh/flask_web_app.git"

  tasks:
    - name: Install git
      ansible.builtin.package:
        name: git
        state: present

    - name: Create flask-app directory if it doesn't exist
      ansible.builtin.file:
        path: "{{ app_directory }}"
        state: directory
        mode: '0755'

    - name: Clone Github repository
      ansible.builtin.git: 
        repo: "{{ git_repo_url }}"
        dest: "{{ app_directory }}/repository"

    - name: Install Python 3 and pip on CentOS
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip
        - python3-virtualenv
      when: ansible_os_family == 'RedHat'

    - name: Install Python 3 and pip on Ubuntu
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-venv
      when: ansible_os_family == 'Debian'

    - name: Install Python 3 on Linux
      ansible.builtin.package:
        name: python3
        state: present
      when: ansible_os_family == 'Linux'

    - name: Ensure pip is installed
      ansible.builtin.command: "{{ item }}"
      with_items:
        - "pip3 install --upgrade pip"
      when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

    - name: Ensure virtualenv is installed on CentOS
      ansible.builtin.package:
        name: python3-virtualenv
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Ensure virtualenv is installed on Linux
      ansible.builtin.package:
        name: python3-venv
        state: present
      when: ansible_os_family == 'Linux'

    - name: Create a virtual environment
      ansible.builtin.command: virtualenv -p python3 venv
      args:
        chdir: "{{ app_directory }}/repository"

    - name: Activate virtual environment
      ansible.builtin.shell: |
        source "{{ app_directory }}/repository/venv/bin/activate" && python --version
      args:
        executable: /bin/bash

    - name: Install flask within virtual environment
      ansible.builtin.command: pip install flask
      args:
        chdir: "{{ app_directory }}/repository"

    - name: Run flask app
      ansible.builtin.command: nohup python3 app.py &
      async: 60
      poll: 0
      args:
        chdir: "{{ app_directory }}/repository"

    - name: Get the PID of the flask app
      ansible.builtin.shell: "ps aux | grep 'python3 app.py' | grep -v grep | awk '{print $2}'"
      register: flask_pid
      ignore_errors: true

    - name: Stop flask app after 60 seconds
      ansible.builtin.shell: "sleep 60 && kill -TERM {{ flask_pid.stdout }}"
      ignore_errors: true
