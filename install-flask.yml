---
- name: Deploy Flask web app
  hosts: all
  become: yes
  vars:
      app_directory: /home/{{ ansible_user }}/flask-app"
      git_repo_url: "https://github.com/ctoweh/flask_web_app.git"


  tasks:
    - name: Install git
      package:
        name: git
        state: present
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS"

    - name: Install git
      apt:
        name: git
        state: present
      when: ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Create flask-app directory
      file:
        path: “{{ app_directory }}”
        state: directory
        mode: ‘0755’ 
        become: yes 

    - name: Clone GitHub repository
      git:
        repo: “{{ git_repo_url }}”
        dest: “{{ app_directory }}/repository”
        update: yes

    - name: Update repositories and install Python
      package:
        name: "{{ item }}"
        state: present
      loop:
        - python
        - python3
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Install pip
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: /tmp/get-pip.py
      become: yes
      become_user: root
      args:
        creates: /usr/local/bin/pip
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Install virtualenv package
      pip:
        name: virtualenv
        state: present
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Create virtual environment
      command: python3 -m venv {{ app_directory }}/venv
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Activate virtual environment
      command: source {{ app_directory }}/venv/bin/activate
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Install Flask within virtual environment
      pip:
        name: flask
        virtualenv: {{ app_directory }}/venv
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Run Flask app
      command: python/ {{ app_directory }}/app.py &
      async: 60
      poll: 0
      register: flask_app_process
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Wait for Flask app to run
      async_status:
        jid: "{{ flask_app_process.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 6
      delay: 10
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Get PID of Flask app
      shell: pgrep -f "python /{{ app_directory }}/app.py"
      register: flask_app_pid
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"

    - name: Stop Flask app
      shell: kill -9 "{{ flask_app_pid.stdout }}"
      ignore_errors: true
      when: ansible_os_family == "RedHat" or ansible_distribution == "CentOS" or ansible_os_family == "Debian" or ansible_distribution == "Ubuntu"
